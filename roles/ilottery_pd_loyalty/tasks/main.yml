---
- set_fact:
    pd_loyalty_packages:
      - "{{ config.loyaltySiteName}}-loyalty-adapter-application-rpm"
      - "{{ config.siteName}}-doc-generator-application-rpm"
      - "{{ config.loyaltySiteName}}-raf-adapter-application-rpm"
      - "{{ config.siteName}}-pd-jboss-modules-rpm"
    jboss_common_packages:
      - "jolokia-1.3.3-1.x86_64"
      - "nodejs-5.11.1-1nodesource.el7.centos.x86_64"
      - "apr"
      - "openssl"
      - "coreutils"
      - "hawtio-no-slf4j-1.4.65-1"
    pd_loyalty_raf_tpls:
      - "{{ p_tmpdir }}/raf-adapter.properties.tpl"
      - "{{ p_tmpdir }}/raf-esa-configuration-adapter.xml.tpl"
    pd_loyalty_doc_tpls:
      - "{{ p_tmpdir }}/doc-generator-esa-configuration.xml.tpl"
    pd_loyalty_adapter_tpls:
      - "{{ p_tmpdir }}/activemq.properties.tpl"
      - "{{ p_tmpdir }}/loyalty-adapter.properties.tpl"
      - "{{ p_tmpdir }}/command-connectors.properties.tpl"
      - "{{ p_tmpdir }}/lty-skipped-types.properties.tpl"
      - "{{ p_tmpdir }}/lty-transaction-types.properties.tpl"
      - "{{ p_tmpdir }}/loyalty-esa-configuration-adapter.xml.tpl"

- name: Install jboss common packages
  yum:
    name: "{{ item }}"
    state: present
    disable_gpg_check: yes
  with_items: "{{ jboss_common_packages }}"

- name: Remove application packages
  when: install_app == "true"
  yum:
    name: "{{ item }}"
    state: removed
    disable_gpg_check: yes
  with_items: "{{ pd_loyalty_packages }}"

- name: remove jboss autodeploy marker files
  shell: 'find {{ jboss_server_path }}/{{ jboss_node_name }}/deployments/ -type f -regex ".*\.\(dodeploy\|skipdeploy\|isdeploying\|deployed\|failed\|isundeploying\|undeployed\|pending\)" -delete'

- name: Launch yum clean all
  shell: "yum clean all"
  become: yes

- name: Install application packages from yum repo
  when: install_app == "true"
  yum:
    name: "{{ item }}-{{ config.ilottery_loyalty_version}}"
    state: present
    disable_gpg_check: yes
  with_items: "{{ pd_loyalty_packages }}"

- name: Fetch templates
  when: install_app == "true"
  fetch:
    src: "{{ item.src}}"
    dest: "{{ item.dest }}/"
    flat: yes
  become: false
  run_once: true
  with_items:
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-raf-adapter-env-config/src/main/env-config/module/raf-adapter/raf-adapter.properties.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-raf-adapter-env-config/src/main/env-config/module/raf-adapter/raf-esa-configuration-adapter.xml.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.siteName }}-doc-generator-env-config/src/main/env-config/module/doc-generator/doc-generator-esa-configuration.xml.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/activemq.properties.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/loyalty-adapter.properties.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/command-connectors.properties.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/loyalty-esa-configuration-adapter.xml.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/lty-skipped-types.properties.tpl", dest: "{{ p_tmpdir }}" }
    - { src: "/usr/local/gtech/pd-loyalty/{{ config.loyaltySiteName }}-loyalty-adapter-env-config/src/main/env-config/module/loyalty-adapter/lty-transaction-types.properties.tpl", dest: "{{ p_tmpdir }}" }

- name: Create /etc/gtech/pd/config/pd-loyalty/main/loyalty-adapter folder
  file:
    path: /etc/gtech/pd/config/pd-loyalty/main/loyalty-adapter
    state: directory
    owner: jboss
    group: jboss
    mode: 0755

- name: Create /etc/gtech/pd/config/pd-loyalty-global/main folder
  file:
    path: /etc/gtech/pd/config/pd-loyalty-global/main
    state: directory
    owner: jboss
    group: jboss
    mode: 0755


- name: Create /etc/gtech/pd/config/pd-loyalty/main/raf-adapter folder
  file:
    path: /etc/gtech/pd/config/pd-loyalty/main/raf-adapter
    state: directory
    owner: jboss
    group: jboss
    mode: 0755

- name: Create /etc/gtech/pd/config/pd-loyalty/main/doc-generator folder
  file:
    path: /etc/gtech/pd/config/pd-loyalty/main/doc-generator
    state: directory
    owner: jboss
    group: jboss
    mode: 0755

- name: Parsing pd-loyalty raf-adapter templates
  when: install_app == "true"
  template:
    src: "{{ item }}"
    dest: "/etc/gtech/pd/config/pd-loyalty/main/raf-adapter/{{ item | basename | regex_replace('\\.tpl$', '') }}"
    mode: 0644
  with_fileglob: "{{ pd_loyalty_raf_tpls }}"

- name: Parsing pd-loyalty doc-generator templates
  when: install_app == "true"
  template:
    src: "{{ item }}"
    dest: "/etc/gtech/pd/config/pd-loyalty/main/doc-generator/{{ item | basename | regex_replace('\\.tpl$', '') }}"
    mode: 0644
  with_fileglob: "{{ pd_loyalty_doc_tpls }}"

- name: Parsing pd-loyalty adapter templates
  when: install_app == "true"
  template:
    src: "{{ item }}"
    dest: "/etc/gtech/pd/config/pd-loyalty/main/loyalty-adapter/{{ item | basename | regex_replace('\\.tpl$', '') }}"
    mode: 0644
  with_fileglob: "{{ pd_loyalty_adapter_tpls }}"

 # END products configurations 

- name: Install security limits
  template:
    src: "templates/security/limits.conf"
    dest: "/etc/security/limits.conf"
    mode: 0644
    owner: root
    group: root

- name: Create /opt/jboss/modules/system/layers/base/javax/validation/api/1.1.0/ dir
  file:
    path: /opt/jboss/modules/system/layers/base/javax/validation/api/1.1.0
    state: directory
    owner: jboss
    group: jboss
    mode: 0755

- name: Install /opt/jboss/modules/system/layers/base/javax/validation/api/1.1.0/module.xml template
  template:
    src: "templates/jboss/modules/system/layers/base/javax/validation/api/1.1.0/module.xml"
    dest: "/opt/jboss/modules/system/layers/base/javax/validation/api/1.1.0/module.xml"
    mode: 0644
    owner: jboss
    group: jboss

# Check if jblogrotate.sh exist
- name: Check if jblogrotate.sh exist
  stat: 
    path: /etc/jbossas/jblogrotate.sh
  register: jblogrotate_stat

- name: Remove file jblogrotate.sh
  file:
    path: /etc/jbossas/jblogrotate.sh
    state: absent
  when: jblogrotate_stat.stat.exists is defined and jblogrotate_stat.stat.exists == true

- name: Remove jboss cron logrotation /etc/jbossas/jblogrotate.sh
  when: enable_logremoval
  cron:
    name: "jboss logrotation jblogrotate.sh"
    state: absent

# - name: Copying 
#   copy:
#     src: "files/jbossas/jblogrotate.sh"
#     dest: "/etc/jbossas/jblogrotate.sh"
#     owner: root
#     group: root
#     mode: 0755

# - name: Install jboss cron logrotation /etc/jbossas/jblogrotate.sh
#   when: enable_logremoval
#   cron:
#     name: "jboss logrotation jblogrotate.sh"
#     minute: "0"
#     hour: "23"
#     user: "root"
#     job: "/etc/jbossas/jblogrotate.sh {{ keep_logs_days }}"

- name: Setting correct permissions/ownership on various directories
  file:
    path: "{{ item }}"
    state: directory
    owner: jboss
    group: jboss
    mode: 0755
  with_items:
    - "/usr/share/jbossas/modules/com/gtech/pd/config/{{ instance_name }}"
    - "/usr/share/jbossas/modules/com/gtech/pd/config/pd-loyalty-global"
    - "/usr/share/jbossas/modules/com/gtech/pd/config/pd-global"
    - "/etc/gtech/pd/config/pd-global/main"
    - "/etc/gtech/pd/config/{{ instance_name }}/main"

- name: "Create symlinks /usr/share/jbossas/modules/com/gtech/pd/config/{{ instance_name }}/main to /etc/gtech/pd/config/{{ instance_name }}/main"
  file:
    src: "/etc/gtech/pd/config/{{ instance_name }}/main"
    dest: "/usr/share/jbossas/modules/com/gtech/pd/config/{{ instance_name }}/main"
    state: link

- name: "Create symlinks /usr/share/jbossas/modules/com/gtech/pd/config/pd-loyalty-global/main to /etc/gtech/pd/config/pd-loyalty-global/main"
  file:
    src: "/etc/gtech/pd/config/pd-loyalty-global/main"
    dest: "/usr/share/jbossas/modules/com/gtech/pd/config/pd-loyalty-global/main"
    state: link

- name: Install /etc/gtech/pd/config/pd-loyalty/main/module.xml template
  template:
    src: "templates/gtech/pd/config/pd-loyalty/main/module.xml"
    dest: "/etc/gtech/pd/config/pd-loyalty/main/module.xml"
    mode: 0644
    owner: jboss
    group: jboss

- name: Install /etc/gtech/pd/config/pd-loyalty-global/main/module.xml template
  template:
    src: "templates/gtech/pd/config/pd-loyalty-global/main/module.xml"
    dest: "/etc/gtech/pd/config/pd-loyalty-global/main/module.xml"
    mode: 0644
    owner: jboss
    group: jboss

- name: "Create symlinks /usr/share/jbossas/{{ instance_name }}/deployments/jolokia.war to /var/lib/jolokia/jolokia.war"
  file:
    src: "/var/lib/jolokia/jolokia.war"
    dest: "/usr/share/jbossas/{{ instance_name }}/deployments/jolokia.war"
    state: link

- name: Create symlinks /opt/jdk to /usr/lib/jvm/java
  file:
    src: "/usr/lib/jvm/java"
    dest: "/opt/jdk"
    state: link

- name: Create hash for jboss mgmt password
  shell: echo "{{ jboss_management_user }}:ManagementRealm:{{ jboss_management_pass }}" | md5sum | cut -d ' ' -f 1
  register: md5jbosspwd

- set_fact: 
    jboss_real_management_pass: "{{ md5jbosspwd.stdout }}"

- name: Install mgmt-users.properties template
  template:
    src: "templates/configuration/mgmt-users.properties"
    dest: "/etc/jbossas/{{ instance_name }}/mgmt-users.properties"
    mode: 0644
    owner: jboss
    group: jboss

- name: Create hash for jboss ejb password
  shell: echo "{{ ejbuser }}:ApplicationRealm:{{ ejbpassword }}" | md5sum | cut -d ' ' -f 1
  register: md5jbossejbpwd

- set_fact:
    realejbpassword: "{{ md5jbossejbpwd.stdout }}"

- name: Create hash for jboss jms password
  shell: echo "{{ jms_user }}:ApplicationRealm:{{ jms_pass }}" | md5sum | cut -d ' ' -f 1
  register: md5jbossjmspwd

- set_fact:
    realjmspassword: "{{ md5jbossjmspwd.stdout }}"

- name: Create hash forejb-security-realm secret
  shell: echo -n "{{ ejbpassword }}" | base64
  register: forejb_security_realm_secret

- set_fact:
    real_forejb_security_realm_secret: "{{ forejb_security_realm_secret.stdout }}"

- name: Install jboss configuration templates
  template:
    src: "templates/configuration/{{ item }}"
    dest: "/etc/jbossas/{{ instance_name }}/{{ item }}"
    mode: 0644
    owner: jboss
    group: jboss
  with_items:
    - logging.properties
    - mgmt-groups.properties
    - mgmt-users.properties

- name: Install jboss configuration file
  template:
    src: "templates/configuration/standalone-full-ha.xml"
    dest: "/etc/jbossas/{{ instance_name }}/standalone-automation-{{ instance_name }}.xml"
    mode: 0644
    owner: jboss
    group: jboss

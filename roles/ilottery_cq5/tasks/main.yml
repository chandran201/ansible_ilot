---
- set_fact:
    cq5_app_packages:
      - "interactive-portal"


- name: Install fixed start script
  template:
    src: "templates/start"
    dest: "/var/lib/cq5/crx-quickstart/bin/start"
    mode: 0755
    owner: cq5
    group: cq5

- name: Start cq5 Service
  systemd:
    name: "cq5"
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Remove cq5 app packages
  yum:
    name: "{{ item }}"
    state: removed
    disable_gpg_check: yes
  with_items: "{{ cq5_app_packages }}"

- name: Launch yum clean all
  shell: "yum clean all"
  become: yes

- name: Install cq5 app packages
  yum:
    name: "{{ item }}-{{ config.portal_version }}"
    state: present
    disable_gpg_check: yes
  with_items: "{{ cq5_app_packages }}"

- name: Remove ccportal.properties
  when: runmode == "publish"
  file:
    path: "/etc/gtech/ccportal/ccportal.properties"
    state: absent


- name: Create ccportal.properties from inventory
  when: runmode == "publish"
  template:
    src: "templates/publish/ccportal.properties"
    dest: "/etc/gtech/ccportal/ccportal.properties"
    mode: 755
    owner: cq5
    group: cq5

- name: Remove ccportal_author.properties
  when: runmode == "author"
  file:
    path: "/etc/gtech/ccportal/ccportal_author.properties"
    state: absent

- name: Create ccportal_author.properties from inventory
  when: runmode == "author"
  template:
    src: "templates/author/ccportal_author.properties"
    dest: "/etc/gtech/ccportal/ccportal_author.properties"
    mode: 755
    owner: cq5
    group: cq5

- pause:
    minutes: 5
    prompt: "Waiting for cq5 to boot completely"

- name: "cd /usr/local/gtech/ccportal; ./install-portal-app.sh; ./install-portal-content.sh"
  when: runmode == "publish"
  shell: "cd /usr/local/gtech/ccportal; ./install-portal-app.sh; ./install-portal-content.sh"
  become: true
  register: install_portal_publish

- debug: msg="{{ install_portal_publish.stdout}}"
  when: runmode == "publish"

- name: "cd /usr/local/gtech/ccportal; ./install-portal-app-author.sh; ./install-portal-content-author.sh"
  when: runmode == "author"
  shell: "cd /usr/local/gtech/ccportal; ./install-portal-app-author.sh; ./install-portal-content-author.sh"
  become: true
  register: install_portal_author

- debug: msg="{{ install_portal_author.stdout}}"
  when: runmode == "author"

